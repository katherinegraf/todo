{"ast":null,"code":"var _jsxFileName = \"/Users/katherinegraf/code/todo/react-app/src/ExistingTasks.js\";\nimport React from 'react';\nimport { icon, library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport { Tachyons } from 'tachyons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlibrary.add(fas);\n\nconst ExistingTasks = ({\n  existingTasks,\n  deleteTask,\n  completeTask,\n  loading\n}) => {\n  if (loading) {\n    return 'xyz';\n  }\n\n  if (existingTasks && existingTasks.length > 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"existing-tasks w-100\",\n        children: existingTasks.map(task => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-parent bt b--black-10\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"complete-btn\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                onClick: () => completeTask(task.id),\n                children: task.status === \"incomplete\" ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: \"check\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 27,\n                  columnNumber: 47\n                }, this) : /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: \"check-square\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 28,\n                  columnNumber: 47\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: task.status === \"incomplete\" ? 'task-child w-70' : 'inactive-title task-child w-70',\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"delete-btn w-5\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                onClick: () => deleteTask(task.id),\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: \"times\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  }\n\n  return null;\n};\n\n_c = ExistingTasks;\nexport default ExistingTasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExistingTasks\");","map":{"version":3,"sources":["/Users/katherinegraf/code/todo/react-app/src/ExistingTasks.js"],"names":["React","icon","library","FontAwesomeIcon","fas","Tachyons","add","ExistingTasks","existingTasks","deleteTask","completeTask","loading","length","map","task","id","status","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,OAAf,QAA8B,mCAA9B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,GAAT,QAAoB,mCAApB;AACA,SAASC,QAAT,QAAyB,UAAzB;;AAEAH,OAAO,CAACI,GAAR,CAAYF,GAAZ;;AAEA,MAAMG,aAAa,GAAG,CAAC;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA,UAAjB;AAA6BC,EAAAA,YAA7B;AAA2CC,EAAAA;AAA3C,CAAD,KAA0D;AAE5E,MAAIA,OAAJ,EAAa;AACT,WAAO,KAAP;AACH;;AAED,MAAIH,aAAa,IAAIA,aAAa,CAACI,MAAd,GAAuB,CAA5C,EAA+C;AAC3C,wBACI;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,kBACKJ,aAAa,CAACK,GAAd,CAAmBC,IAAD,IAAU;AACzB,8BACI;AAAK,YAAA,SAAS,EAAC,4BAAf;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,cAAf;AAAA,qCACI;AACI,gBAAA,OAAO,EAAI,MAAMJ,YAAY,CAACI,IAAI,CAACC,EAAN,CADjC;AAAA,0BAGKD,IAAI,CAACE,MAAL,KAAgB,YAAhB,gBACK,QAAC,eAAD;AAAiB,kBAAA,IAAI,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,wBADL,gBAEK,QAAC,eAAD;AAAiB,kBAAA,IAAI,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA;AALV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAWI;AAAK,cAAA,SAAS,EACVF,IAAI,CAACE,MAAL,KAAgB,YAAhB,GACE,iBADF,GAEE,gCAHN;AAAA,wBAKMF,IAAI,CAACG;AALX;AAAA;AAAA;AAAA;AAAA,oBAXJ,eAkBI;AAAK,cAAA,SAAS,EAAC,gBAAf;AAAA,qCACI;AACI,gBAAA,OAAO,EAAI,MAAMR,UAAU,CAACK,IAAI,CAACC,EAAN,CAD/B;AAAA,uCAGI,QAAE,eAAF;AAAkB,kBAAA,IAAI,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ;AA4BH,SA7BA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAoCH;;AAED,SAAO,IAAP;AAEH,CA/CD;;KAAMR,a;AAiDN,eAAeA,aAAf","sourcesContent":["import React from 'react';\nimport { icon, library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { fas } from '@fortawesome/free-solid-svg-icons'\nimport { Tachyons } from 'tachyons'\n\nlibrary.add(fas)\n\nconst ExistingTasks = ({ existingTasks, deleteTask, completeTask, loading }) => {\n    \n    if (loading) {\n        return 'xyz';\n    }\n\n    if (existingTasks && existingTasks.length > 0) {\n        return (\n            <div>\n                <div className='existing-tasks w-100'>\n                    {existingTasks.map((task) => {\n                        return (\n                            <div className='task-parent bt b--black-10'>\n                                <div className='complete-btn'>\n                                    <label\n                                        onClick = {() => completeTask(task.id)}\n                                    >\n                                        {task.status === \"incomplete\" \n                                            ? <FontAwesomeIcon icon=\"check\" />\n                                            : <FontAwesomeIcon icon=\"check-square\" />\n                                        }\n                                    </label>\n                                </div>\n                                <div className={\n                                    task.status === \"incomplete\"\n                                    ? 'task-child w-70'\n                                    : 'inactive-title task-child w-70'}\n                                >\n                                    { task.title }\n                                </div>\n                                <div className='delete-btn w-5'>\n                                    <label\n                                        onClick = {() => deleteTask(task.id)}\n                                    >\n                                        < FontAwesomeIcon icon=\"times\" />\n                                    </label>\n                                </div>\n                            </div>        \n                        );\n                    })}\n                </div>\n            </div>\n        );\n    }\n\n    return null;\n\n}\n\nexport default ExistingTasks;\n"]},"metadata":{},"sourceType":"module"}