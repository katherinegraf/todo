{"ast":null,"code":"var _jsxFileName = \"/Users/katherinegraf/code/todo/react-app/src/TaskCreate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskCreate = ({\n  fetchData\n}) => {\n  _s();\n\n  const [newTask, setNewTask] = useState(null);\n  const [input, setInput] = useState({\n    name: ''\n  });\n  const newTaskUrl = \"//localhost:2000/addTask\";\n\n  async function addNewTask(event) {\n    // if (event.charCode === 13 || event.key === \"Enter\") {\n    setNewTask(event.target.value);\n  }\n\n  async function submitNewTask(event) {\n    //event.preventDefault();\n    let formData = new FormData();\n    formData.append('title', newTask);\n\n    for (var key of formData.entries()) {\n      console.log(key[0] + ', ' + key[1]);\n    }\n\n    ;\n    let req = {\n      method: 'POST',\n      body: formData\n    }; // console.log(req);\n\n    let resp = await fetch(newTaskUrl, req); // console.log(resp.status);\n\n    if (resp.status < 400) {\n      console.log('successfully added');\n      setInput(null);\n      setNewTask(null);\n      event.target.value = ''; // myInput.value='';\n\n      Array.from(document.querySelectorAll('input')).forEach(input => input.value = '');\n      fetchData(); // TODO how to clear input field after submit\n    } else {\n      console.log('failed to add');\n    }\n  } // TODO add project to Git\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-create ba b--light-gray\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Add a task:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"userInput\",\n      type: \"text\" // ref={(el) => (myInput = el)}\n      ,\n      value: input.userInput,\n      onChange: event => addNewTask(event)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"reset\",\n      onClick: event => submitNewTask(event),\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TaskCreate, \"DrgKnM5547+dCoGTsyAxUzBln/k=\");\n\n_c = TaskCreate;\nexport default TaskCreate;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskCreate\");","map":{"version":3,"sources":["/Users/katherinegraf/code/todo/react-app/src/TaskCreate.js"],"names":["React","useState","TaskCreate","fetchData","newTask","setNewTask","input","setInput","name","newTaskUrl","addNewTask","event","target","value","submitNewTask","formData","FormData","append","key","entries","console","log","req","method","body","resp","fetch","status","Array","from","document","querySelectorAll","forEach","userInput"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAAA;;AAElC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC;AAACO,IAAAA,IAAI,EAAE;AAAP,GAAD,CAAlC;AAEA,QAAMC,UAAU,GAAG,0BAAnB;;AAEA,iBAAeC,UAAf,CAA2BC,KAA3B,EAAkC;AAC9B;AACIN,IAAAA,UAAU,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV;AACP;;AAED,iBAAeC,aAAf,CAA8BH,KAA9B,EAAqC;AACjC;AACA,QAAII,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBb,OAAzB;;AACA,SAAK,IAAIc,GAAT,IAAgBH,QAAQ,CAACI,OAAT,EAAhB,EAAoC;AACzCC,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAAC,CAAD,CAAH,GAAS,IAAT,GAAgBA,GAAG,CAAC,CAAD,CAA/B;AACA;;AAAA;AACK,QAAII,GAAG,GAAG;AACNC,MAAAA,MAAM,EAAE,MADF;AAENC,MAAAA,IAAI,EAAET;AAFA,KAAV,CAPiC,CAWjC;;AACA,QAAIU,IAAI,GAAG,MAAMC,KAAK,CAACjB,UAAD,EAAaa,GAAb,CAAtB,CAZiC,CAajC;;AACA,QAAIG,IAAI,CAACE,MAAL,GAAc,GAAlB,EAAuB;AACnBP,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAd,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAF,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAM,MAAAA,KAAK,CAACC,MAAN,CAAaC,KAAb,GAAmB,EAAnB,CAJmB,CAKnB;;AACAe,MAAAA,KAAK,CAACC,IAAN,CAAWC,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,CAAX,EAA+CC,OAA/C,CACI1B,KAAK,IAAKA,KAAK,CAACO,KAAN,GAAY,EAD1B;AAIAV,MAAAA,SAAS,GAVU,CAWnB;AACH,KAZD,MAYO;AACHiB,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH;AACJ,GAzCiC,CA2ClC;;;AAEE,sBACE;AAAK,IAAA,SAAS,EAAC,8BAAf;AAAA,4BACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADR,eAIQ;AACI,MAAA,IAAI,EAAC,WADT;AAEI,MAAA,IAAI,EAAC,MAFT,CAGI;AAHJ;AAII,MAAA,KAAK,EAAEf,KAAK,CAAC2B,SAJjB;AAKI,MAAA,QAAQ,EAAItB,KAAD,IAAWD,UAAU,CAACC,KAAD;AALpC;AAAA;AAAA;AAAA;AAAA,YAJR,eAWQ;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,OAAO,EAAIA,KAAD,IAAWG,aAAa,CAACH,KAAD,CAFtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXR;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBH,CAlEH;;GAAMT,U;;KAAAA,U;AAoEN,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst TaskCreate = ({ fetchData }) => {\n\n    const [newTask, setNewTask] = useState(null);\n    const [input, setInput] = useState({name: ''});\n\n    const newTaskUrl = \"//localhost:2000/addTask\"\n\n    async function addNewTask (event) {\n        // if (event.charCode === 13 || event.key === \"Enter\") {\n            setNewTask(event.target.value);\n    }\n\n    async function submitNewTask (event) {\n        //event.preventDefault();\n        let formData = new FormData();\n        formData.append('title', newTask);\n        for (var key of formData.entries()) {\n\t\t\tconsole.log(key[0] + ', ' + key[1])\n\t\t};\n        let req = {\n            method: 'POST',\n            body: formData,\n        }\n        // console.log(req);\n        let resp = await fetch(newTaskUrl, req);\n        // console.log(resp.status);\n        if (resp.status < 400) {\n            console.log('successfully added')\n            setInput(null);\n            setNewTask(null);\n            event.target.value='';\n            // myInput.value='';\n            Array.from(document.querySelectorAll('input')).forEach(\n                input => (input.value='')\n            );\n\n            fetchData();\n            // TODO how to clear input field after submit\n        } else {\n            console.log('failed to add');\n        }\n    }\n\n    // TODO add project to Git\n  \n      return (\n        <div className='task-create ba b--light-gray'>\n                <label>\n                    Add a task:\n                </label>\n                <input \n                    name='userInput'\n                    type='text'\n                    // ref={(el) => (myInput = el)}\n                    value={input.userInput}\n                    onChange= {(event) => addNewTask(event)}\n                />\n                <button\n                    type='reset'\n                    onClick= {(event) => submitNewTask(event)}\n                >\n                    Submit\n                </button>\n        </div>\n      );\n\n  }\n  \nexport default TaskCreate;\n"]},"metadata":{},"sourceType":"module"}