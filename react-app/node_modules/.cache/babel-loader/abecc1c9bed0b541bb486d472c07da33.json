{"ast":null,"code":"var _jsxFileName = \"/Users/katherinegraf/code/todo/react-app/src/TaskCreate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Tachyons } from 'tachyons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskCreate = ({\n  fetchData\n}) => {\n  _s();\n\n  // TODO add project to Git\n  const [newTask, setNewTask] = useState(null);\n  const [inputValue, setInputValue] = useState(undefined);\n  const [loading, setLoading] = useState(null);\n  const [error, setError] = useState(false);\n  const addTaskUrl = \"//localhost:2000/addTask\";\n\n  function addNewTask(event) {\n    // if (event.charCode === 13 || event.key === \"Enter\") {\n    setNewTask(event.target.value);\n  }\n\n  async function submitNewTask(event) {\n    setLoading(true);\n    event.preventDefault(); // console.log(newTask);\n    // console.log(inputValue);\n\n    let formData = new FormData();\n    formData.append('title', newTask);\n    let req = {\n      method: 'POST',\n      body: formData\n    };\n    let resp = await fetch(addTaskUrl, req);\n\n    if (resp.status < 400) {\n      console.log('successfully added');\n      setInputValue('');\n      fetchData();\n    } else {\n      setError(true);\n      console.log('failed to add');\n    }\n\n    setLoading(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: event => {\n      submitNewTask(event);\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"new-task w-30\",\n      type: \"text\",\n      placeholder: \"What do you need to do?\",\n      value: inputValue,\n      onChange: event => addNewTask(event)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TaskCreate, \"BFr5yXw6cw07htt2k5CsUL6uw6U=\");\n\n_c = TaskCreate;\nexport default TaskCreate;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskCreate\");","map":{"version":3,"sources":["/Users/katherinegraf/code/todo/react-app/src/TaskCreate.js"],"names":["React","useState","Tachyons","TaskCreate","fetchData","newTask","setNewTask","inputValue","setInputValue","undefined","loading","setLoading","error","setError","addTaskUrl","addNewTask","event","target","value","submitNewTask","preventDefault","formData","FormData","append","req","method","body","resp","fetch","status","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,UAAzB;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAAA;;AAElC;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAACQ,SAAD,CAA5C;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,KAAD,CAAlC;AAEA,QAAMa,UAAU,GAAG,0BAAnB;;AAEA,WAASC,UAAT,CAAqBC,KAArB,EAA4B;AACxB;AACAV,IAAAA,UAAU,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV;AACH;;AAED,iBAAeC,aAAf,CAA8BH,KAA9B,EAAqC;AACjCL,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAK,IAAAA,KAAK,CAACI,cAAN,GAFiC,CAGjC;AACA;;AACA,QAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBlB,OAAzB;AACA,QAAImB,GAAG,GAAG;AACNC,MAAAA,MAAM,EAAE,MADF;AAENC,MAAAA,IAAI,EAAEL;AAFA,KAAV;AAIA,QAAIM,IAAI,GAAG,MAAMC,KAAK,CAACd,UAAD,EAAaU,GAAb,CAAtB;;AACA,QAAIG,IAAI,CAACE,MAAL,GAAc,GAAlB,EAAuB;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAvB,MAAAA,aAAa,CAAC,EAAD,CAAb;AACAJ,MAAAA,SAAS;AACZ,KAJD,MAIO;AACHS,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAiB,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH;;AACDpB,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH;;AAED,sBACI;AAAM,IAAA,QAAQ,EAAGK,KAAD,IAAW;AAACG,MAAAA,aAAa,CAACH,KAAD,CAAb;AAAqB,KAAjD;AAAA,4BACI;AACI,MAAA,SAAS,EAAC,eADd;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,WAAW,EAAC,yBAHhB;AAII,MAAA,KAAK,EAAET,UAJX;AAKI,MAAA,QAAQ,EAAIS,KAAD,IAAWD,UAAU,CAACC,KAAD;AALpC;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBD,CAxDH;;GAAMb,U;;KAAAA,U;AA0DN,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Tachyons } from 'tachyons';\n\nconst TaskCreate = ({ fetchData }) => {\n\n    // TODO add project to Git\n  \n    const [newTask, setNewTask] = useState(null);\n    const [inputValue, setInputValue] = useState(undefined);\n    const [loading, setLoading] = useState(null);\n    const [error, setError] = useState(false);\n\n    const addTaskUrl = \"//localhost:2000/addTask\"\n\n    function addNewTask (event) {\n        // if (event.charCode === 13 || event.key === \"Enter\") {\n        setNewTask(event.target.value);\n    }\n\n    async function submitNewTask (event) {\n        setLoading(true);\n        event.preventDefault();\n        // console.log(newTask);\n        // console.log(inputValue);\n        let formData = new FormData();\n        formData.append('title', newTask);\n        let req = {\n            method: 'POST',\n            body: formData,\n        }\n        let resp = await fetch(addTaskUrl, req);\n        if (resp.status < 400) {\n            console.log('successfully added');\n            setInputValue('');\n            fetchData();\n        } else {\n            setError(true);\n            console.log('failed to add');\n        }\n        setLoading(false);\n    }\n\n    return (\n        <form onSubmit={(event) => {submitNewTask(event)}}>\n            <input \n                className='new-task w-30'\n                type='text'\n                placeholder='What do you need to do?'\n                value={inputValue}\n                onChange= {(event) => addNewTask(event)}\n            />\n            <button \n                // onClick= {(event) => submitNewTask(event)}\n            >\n                Submit\n            </button>\n        </form>\n    );\n\n  }\n  \nexport default TaskCreate;\n"]},"metadata":{},"sourceType":"module"}