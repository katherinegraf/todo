{"ast":null,"code":"var _jsxFileName = \"/Users/katherinegraf/code/todo/react-app/src/TaskCreate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskCreate = ({\n  fetchData\n}) => {\n  _s();\n\n  const [newTask, setNewTask] = useState(null);\n  const [inputField, setInputField] = useState(null);\n  const newTaskUrl = \"//localhost:2000/addTask\";\n\n  async function addNewTask(event) {\n    // if (event.charCode === 13 || event.key === \"Enter\") {\n    setNewTask(event.target.value);\n  }\n\n  async function clearInput(value) {\n    setInputField(null);\n  }\n\n  async function submitNewTask(event) {\n    let formData = new FormData();\n    formData.append('title', newTask);\n    let req = {\n      method: 'POST',\n      body: formData\n    };\n    let resp = await fetch(newTaskUrl, req);\n\n    if (resp.status < 400) {\n      console.log('successfully added'); //setInputField(null);\n      // setting ^ to '' clears it once, but then you can't type in it again\n      // setting ^ to null doesn't clear the field\n\n      setInputField(null);\n      fetchData();\n    } else {\n      console.log('failed to add');\n    }\n  } // TODO add project to Git\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-create ba b--light-gray\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"w-30\",\n      ref: ref => inputField = ref,\n      type: \"text\",\n      placeholder: \"What do you need to do?\" // value={ inputField }\n      ,\n      onChange: event => addNewTask(event),\n      autoFocus: \"true\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\" // onClick= {(event) => { submitNewTask(event); clearInput() }}\n      ,\n      onClick: event => submitNewTask(event),\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TaskCreate, \"oxehh4lQ5HQ1sjsCH4vAM2jK00g=\");\n\n_c = TaskCreate;\nexport default TaskCreate;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskCreate\");","map":{"version":3,"sources":["/Users/katherinegraf/code/todo/react-app/src/TaskCreate.js"],"names":["React","useState","TaskCreate","fetchData","newTask","setNewTask","inputField","setInputField","newTaskUrl","addNewTask","event","target","value","clearInput","submitNewTask","formData","FormData","append","req","method","body","resp","fetch","status","console","log","ref"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAAA;;AAElC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,IAAD,CAA5C;AAEA,QAAMO,UAAU,GAAG,0BAAnB;;AAEA,iBAAeC,UAAf,CAA2BC,KAA3B,EAAkC;AAC9B;AACAL,IAAAA,UAAU,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV;AACH;;AAED,iBAAeC,UAAf,CAA2BD,KAA3B,EAAkC;AAC9BL,IAAAA,aAAa,CAAC,IAAD,CAAb;AACH;;AAED,iBAAeO,aAAf,CAA8BJ,KAA9B,EAAqC;AACjC,QAAIK,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBb,OAAzB;AACA,QAAIc,GAAG,GAAG;AACNC,MAAAA,MAAM,EAAE,MADF;AAENC,MAAAA,IAAI,EAAEL;AAFA,KAAV;AAIA,QAAIM,IAAI,GAAG,MAAMC,KAAK,CAACd,UAAD,EAAaU,GAAb,CAAtB;;AACA,QAAIG,IAAI,CAACE,MAAL,GAAc,GAAlB,EAAuB;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EADmB,CAEnB;AACI;AACA;;AACJlB,MAAAA,aAAa,CAAC,IAAD,CAAb;AACAJ,MAAAA,SAAS;AACZ,KAPD,MAOO;AACHqB,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH;AACJ,GAlCiC,CAoClC;;;AAEE,sBACE;AAAK,IAAA,SAAS,EAAC,8BAAf;AAAA,4BAIQ;AAAO,MAAA,SAAS,EAAC,MAAjB;AACI,MAAA,GAAG,EAAGC,GAAD,IAASpB,UAAU,GAAEoB,GAD9B;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,WAAW,EAAC,yBAHhB,CAII;AAJJ;AAKI,MAAA,QAAQ,EAAIhB,KAAD,IAAWD,UAAU,CAACC,KAAD,CALpC;AAMI,MAAA,SAAS,EAAC;AANd;AAAA;AAAA;AAAA;AAAA,YAJR,eAYQ;AACI,MAAA,IAAI,EAAC,QADT,CAEI;AAFJ;AAGI,MAAA,OAAO,EAAIA,KAAD,IAAWI,aAAa,CAACJ,KAAD,CAHtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZR;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBH,CA7DH;;GAAMR,U;;KAAAA,U;AA+DN,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst TaskCreate = ({ fetchData }) => {\n\n    const [newTask, setNewTask] = useState(null);\n    const [inputField, setInputField] = useState(null);\n\n    const newTaskUrl = \"//localhost:2000/addTask\"\n\n    async function addNewTask (event) {\n        // if (event.charCode === 13 || event.key === \"Enter\") {\n        setNewTask(event.target.value);\n    }\n\n    async function clearInput (value) {\n        setInputField(null);\n    }\n\n    async function submitNewTask (event) {\n        let formData = new FormData();\n        formData.append('title', newTask);\n        let req = {\n            method: 'POST',\n            body: formData,\n        }\n        let resp = await fetch(newTaskUrl, req);\n        if (resp.status < 400) {\n            console.log('successfully added')\n            //setInputField(null);\n                // setting ^ to '' clears it once, but then you can't type in it again\n                // setting ^ to null doesn't clear the field\n            setInputField(null);\n            fetchData();\n        } else {\n            console.log('failed to add');\n        }\n    }\n\n    // TODO add project to Git\n  \n      return (\n        <div className='task-create ba b--light-gray'>\n                {/* <label>\n                    Add a task:\n                </label> */}\n                <input className='w-30'\n                    ref={(ref) => inputField= ref}\n                    type='text'\n                    placeholder='What do you need to do?'\n                    // value={ inputField }\n                    onChange= {(event) => addNewTask(event)}\n                    autoFocus='true'\n                />\n                <button\n                    type='submit'\n                    // onClick= {(event) => { submitNewTask(event); clearInput() }}\n                    onClick= {(event) => submitNewTask(event)}\n                >\n                    Submit\n                </button>\n        </div>\n      );\n\n  }\n  \nexport default TaskCreate;\n"]},"metadata":{},"sourceType":"module"}