{"ast":null,"code":"var _jsxFileName = \"/Users/katherinegraf/code/todo/react-app/src/ExistingTasks.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // const taskStub = [\n//     {\n//         id: 1,\n//         title: \"mow lawn\",\n//         collaborators: [],\n//         isCompleted: false,\n//     },\n//     {\n//         id: 2,\n//         title: \"do dishes\",\n//         collaborators: [],\n//         isCompleted: false\n//     },\n//     {\n//         id: 3,\n//         title: \"clean bathroom\",\n//         collaborators: [],\n//         isCompleted: false\n//     },\n// ];\n// const tasks = taskStub;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExistingTasks = () => {\n  _s();\n\n  // TODO:\n  // view all existing tasks\n  // deleteTask\n  // editTask\n  // title, collaborators\n  // completeTask \n  const [existingTasks, setExistingTasks] = useState(null);\n  const [loading, setLoading] = useState(null);\n  const [error, setError] = useState(false);\n  const url = \"localhost:2000/allTasksForUser/{id}\";\n\n  async function fetchData() {\n    setLoading(true);\n    let req = await fetch(url);\n\n    if (req.status < 400) {\n      let jsonData = await req.json();\n      setExistingTasks(jsonData);\n      console.log(existingTasks);\n      console.log(jsonData);\n    } else {\n      setError(true);\n    }\n\n    setLoading(false);\n  }\n\n  if (loading) {\n    return 'xyz';\n  } //const deleteTask = () => {\n  //    // delete task ... from list?\n  //}\n  //const completeTask = (id) => {\n  //    task = taskStub.\n  //}\n\n\n  return existingTasks.map(task => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"task\",\n      children: task.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }, this);\n  });\n};\n\n_s(ExistingTasks, \"F63P6SE5fzeC28q3O25jc4nUPPM=\");\n\n_c = ExistingTasks;\nexport default ExistingTasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExistingTasks\");","map":{"version":3,"sources":["/Users/katherinegraf/code/todo/react-app/src/ExistingTasks.js"],"names":["React","useState","ExistingTasks","existingTasks","setExistingTasks","loading","setLoading","error","setError","url","fetchData","req","fetch","status","jsonData","json","console","log","map","task","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACxB;AACA;AACA;AACA;AACI;AACJ;AAEA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCH,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,KAAD,CAAlC;AAEA,QAAMQ,GAAG,GAAG,qCAAZ;;AAEA,iBAAeC,SAAf,GAA2B;AACvBJ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,QAAIK,GAAG,GAAG,MAAMC,KAAK,CAACH,GAAD,CAArB;;AACA,QAAIE,GAAG,CAACE,MAAJ,GAAa,GAAjB,EAAsB;AAClB,UAAIC,QAAQ,GAAG,MAAMH,GAAG,CAACI,IAAJ,EAArB;AACAX,MAAAA,gBAAgB,CAACU,QAAD,CAAhB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYd,aAAZ;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACH,KALD,MAKO;AACHN,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;;AACDF,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH;;AAED,MAAID,OAAJ,EAAa;AACT,WAAO,KAAP;AACH,GA9BuB,CAgCxB;AACA;AACA;AAEA;AACA;AACA;;;AAEA,SACIF,aAAa,CAACe,GAAd,CAAmBC,IAAD,IAAU;AACxB,wBACQ;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA,gBACMA,IAAI,CAACC;AADX;AAAA;AAAA;AAAA;AAAA,YADR;AAKH,GAND,CADJ;AAUH,CAlDD;;GAAMlB,a;;KAAAA,a;AAoDN,eAAeA,aAAf","sourcesContent":["import React, { useState } from 'react';\n\n\n// const taskStub = [\n//     {\n//         id: 1,\n//         title: \"mow lawn\",\n//         collaborators: [],\n//         isCompleted: false,\n//     },\n//     {\n//         id: 2,\n//         title: \"do dishes\",\n//         collaborators: [],\n//         isCompleted: false\n//     },\n//     {\n//         id: 3,\n//         title: \"clean bathroom\",\n//         collaborators: [],\n//         isCompleted: false\n//     },\n// ];\n\n// const tasks = taskStub;\n\nconst ExistingTasks = () => {\n    // TODO:\n    // view all existing tasks\n    // deleteTask\n    // editTask\n        // title, collaborators\n    // completeTask \n    \n    const [existingTasks, setExistingTasks] = useState(null);\n    const [loading, setLoading] = useState(null);\n    const [error, setError] = useState(false);\n\n    const url = \"localhost:2000/allTasksForUser/{id}\";\n\n    async function fetchData() {\n        setLoading(true);\n        let req = await fetch(url);\n        if (req.status < 400) {\n            let jsonData = await req.json();\n            setExistingTasks(jsonData);\n            console.log(existingTasks); \n            console.log(jsonData); \n        } else {\n            setError(true);\n        }\n        setLoading(false);\n    }\n\n    if (loading) {\n        return 'xyz';\n    }\n\n    //const deleteTask = () => {\n    //    // delete task ... from list?\n    //}\n\n    //const completeTask = (id) => {\n    //    task = taskStub.\n    //}\n\n    return (\n        existingTasks.map((task) => {\n            return (\n                    <li className='task'>\n                        { task.title }\n                    </li>\n            );\n        })\n    );\n\n}\n\nexport default ExistingTasks;"]},"metadata":{},"sourceType":"module"}