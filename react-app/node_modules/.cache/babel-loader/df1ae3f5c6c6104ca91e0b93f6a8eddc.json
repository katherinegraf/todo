{"ast":null,"code":"var _jsxFileName = \"/Users/katherinegraf/code/todo/react-app/src/TaskCreate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskCreate = () => {\n  _s();\n\n  const [newTask, setNewTask] = useState(null);\n  const newTaskUrl = \"//localhost:2000/addTask\";\n\n  async function addNewTask(event) {\n    // if (event.charCode === 13 || event.key === \"Enter\") {\n    setNewTask(event.target.value);\n  }\n\n  async function submitNewTask(event) {\n    event.preventDefault();\n    let formData = new FormData(); // let url = `${newTaskUrl}?=${newTask}`;\n    // console.log(url);\n\n    formData.append('title', newTask); // formData.append('title', 'please');\n    // console.log(formData.getAll['title']);\n    // console.log(formData['title']);\n\n    for (var key of formData.entries()) {\n      console.log(key[0] + ', ' + key[1]);\n    }\n\n    ;\n    let req = {\n      method: 'POST',\n      body: formData\n    };\n    console.log(req);\n    let resp = await fetch(newTaskUrl, req);\n    console.log(resp.status);\n\n    if (resp.status < 400) {\n      console.log('successfully added');\n    } else {\n      console.log('failed to add');\n    }\n  } // TODO add project to Git\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-create ba b--light-gray\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Add a task:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: event => addNewTask(event)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: event => submitNewTask(event),\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TaskCreate, \"UdeZFzVewSMAArgH0PVpSmuibSA=\");\n\n_c = TaskCreate;\nexport default TaskCreate;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskCreate\");","map":{"version":3,"sources":["/Users/katherinegraf/code/todo/react-app/src/TaskCreate.js"],"names":["React","useState","TaskCreate","newTask","setNewTask","newTaskUrl","addNewTask","event","target","value","submitNewTask","preventDefault","formData","FormData","append","key","entries","console","log","req","method","body","resp","fetch","status"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAErB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,IAAD,CAAtC;AAEA,QAAMI,UAAU,GAAG,0BAAnB;;AAEA,iBAAeC,UAAf,CAA2BC,KAA3B,EAAkC;AAC9B;AACIH,IAAAA,UAAU,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV;AACP;;AAED,iBAAeC,aAAf,CAA8BH,KAA9B,EAAqC;AACjCA,IAAAA,KAAK,CAACI,cAAN;AACA,QAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf,CAFiC,CAGjC;AACA;;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBX,OAAzB,EALiC,CAMjC;AACA;AACA;;AACA,SAAK,IAAIY,GAAT,IAAgBH,QAAQ,CAACI,OAAT,EAAhB,EAAoC;AACzCC,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAAC,CAAD,CAAH,GAAS,IAAT,GAAgBA,GAAG,CAAC,CAAD,CAA/B;AACA;;AAAA;AACK,QAAII,GAAG,GAAG;AACNC,MAAAA,MAAM,EAAE,MADF;AAENC,MAAAA,IAAI,EAAET;AAFA,KAAV;AAIAK,IAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACA,QAAIG,IAAI,GAAG,MAAMC,KAAK,CAAClB,UAAD,EAAac,GAAb,CAAtB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYI,IAAI,CAACE,MAAjB;;AACA,QAAIF,IAAI,CAACE,MAAL,GAAc,GAAlB,EAAuB;AACnBP,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACH,KAFD,MAEO;AACHD,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH;AACJ,GAnCoB,CAqCrB;;;AAEE,sBACE;AAAK,IAAA,SAAS,EAAC,8BAAf;AAAA,4BAIQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJR,eAKQ;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,QAAQ,EAAIX,KAAD,IAAWD,UAAU,CAACC,KAAD;AAFpC;AAAA;AAAA;AAAA;AAAA,YALR,eASQ;AACI,MAAA,OAAO,EAAIA,KAAD,IAAWG,aAAa,CAACH,KAAD,CADtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATR;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBH,CAxDH;;GAAML,U;;KAAAA,U;AA0DN,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst TaskCreate = () => {\n\n    const [newTask, setNewTask] = useState(null);\n\n    const newTaskUrl = \"//localhost:2000/addTask\"\n\n    async function addNewTask (event) {\n        // if (event.charCode === 13 || event.key === \"Enter\") {\n            setNewTask(event.target.value);\n    }\n\n    async function submitNewTask (event) {\n        event.preventDefault();\n        let formData = new FormData();\n        // let url = `${newTaskUrl}?=${newTask}`;\n        // console.log(url);\n        formData.append('title', newTask);\n        // formData.append('title', 'please');\n        // console.log(formData.getAll['title']);\n        // console.log(formData['title']);\n        for (var key of formData.entries()) {\n\t\t\tconsole.log(key[0] + ', ' + key[1])\n\t\t};\n        let req = {\n            method: 'POST',\n            body: formData,\n        }\n        console.log(req);\n        let resp = await fetch(newTaskUrl, req);\n        console.log(resp.status);\n        if (resp.status < 400) {\n            console.log('successfully added')\n        } else {\n            console.log('failed to add');\n        }\n    }\n\n    // TODO add project to Git\n  \n      return (\n        <div className='task-create ba b--light-gray'>\n            {/* <form */}\n                {/* onSubmit= {(event) => submitNewTask(event)} */}\n            {/* > */}\n                <label>Add a task:</label>\n                <input \n                    type='text'\n                    onChange= {(event) => addNewTask(event)}\n                />\n                <button\n                    onClick= {(event) => submitNewTask(event)}\n                >Submit</button>\n            {/* </form> */}\n        </div>\n      );\n\n  }\n  \nexport default TaskCreate;\n"]},"metadata":{},"sourceType":"module"}