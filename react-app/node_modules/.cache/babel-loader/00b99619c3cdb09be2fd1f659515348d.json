{"ast":null,"code":"var _jsxFileName = \"/Users/katherinegraf/code/todo/react-app/src/ExistingTasks.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { findIconDefinition, library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlibrary.add(fas);\nconst trashcan = findIconDefinition({\n  prefix: 'fas',\n  iconName: 'trash'\n});\n\nconst ExistingTasks = () => {\n  _s();\n\n  // TODO:\n  // view all existing tasks\n  // deleteTask\n  // editTask\n  // title, collaborators\n  // completeTask \n  console.log(library);\n  console.log(fas);\n  const [existingTasks, setExistingTasks] = useState(null);\n  const [loading, setLoading] = useState(null);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const url = \"http://localhost:2000/allTasksForUser/1\";\n\n  async function fetchData() {\n    setLoading(true);\n    let req = await fetch(url);\n\n    if (req.status < 400) {\n      let jsonData = await req.json();\n      setExistingTasks(jsonData);\n      console.log(existingTasks);\n      console.log(jsonData);\n    } else {\n      setError(true);\n    }\n\n    setLoading(false);\n  }\n\n  if (loading) {\n    return 'xyz';\n  }\n\n  if (existingTasks && existingTasks.length > 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"existing-tasks\",\n      children: existingTasks.map(task => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-parent\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-title task-child\",\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"delete-btn task-child\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-trash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 33\n            }, this), \"delete\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }\n\n  return null;\n};\n\n_s(ExistingTasks, \"pWi+ErbA2anFebXdVsbk9JvN2so=\");\n\n_c = ExistingTasks;\nexport default ExistingTasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExistingTasks\");","map":{"version":3,"sources":["/Users/katherinegraf/code/todo/react-app/src/ExistingTasks.js"],"names":["React","useEffect","useState","findIconDefinition","library","fas","add","trashcan","prefix","iconName","ExistingTasks","console","log","existingTasks","setExistingTasks","loading","setLoading","error","setError","fetchData","url","req","fetch","status","jsonData","json","length","map","task","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,kBAAT,EAA6BC,OAA7B,QAA4C,mCAA5C;AACA,SAASC,GAAT,QAAoB,mCAApB;;AAEAD,OAAO,CAACE,GAAR,CAAYD,GAAZ;AAEA,MAAME,QAAQ,GAAGJ,kBAAkB,CAAC;AAAEK,EAAAA,MAAM,EAAE,KAAV;AAAiBC,EAAAA,QAAQ,EAAE;AAA3B,CAAD,CAAnC;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACxB;AACA;AACA;AACA;AACI;AACJ;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;AAEA,QAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCZ,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,KAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAE,MAAM;AACbkB,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAMC,GAAG,GAAG,yCAAZ;;AAEA,iBAAeD,SAAf,GAA2B;AACvBH,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,QAAIK,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,CAArB;;AACA,QAAIC,GAAG,CAACE,MAAJ,GAAa,GAAjB,EAAsB;AAClB,UAAIC,QAAQ,GAAG,MAAMH,GAAG,CAACI,IAAJ,EAArB;AACAX,MAAAA,gBAAgB,CAACU,QAAD,CAAhB;AACAb,MAAAA,OAAO,CAACC,GAAR,CAAYC,aAAZ;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYY,QAAZ;AACH,KALD,MAKO;AACHN,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;;AACDF,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH;;AAED,MAAID,OAAJ,EAAa;AACT,WAAO,KAAP;AACH;;AAED,MAAIF,aAAa,IAAIA,aAAa,CAACa,MAAd,GAAuB,CAA5C,EAA+C;AAC3C,wBACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBACKb,aAAa,CAACc,GAAd,CAAmBC,IAAD,IAAU;AACzB,4BACI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,uBAAf;AAAA,sBACMA,IAAI,CAACC;AADX;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAK,YAAA,SAAS,EAAC,uBAAf;AAAA,oCACI;AAAG,cAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,oBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ;AAWH,OAZA;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAiBH;;AAED,SAAO,IAAP;AAEH,CA7DD;;GAAMnB,a;;KAAAA,a;AA+DN,eAAeA,aAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { findIconDefinition, library } from '@fortawesome/fontawesome-svg-core'\nimport { fas } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(fas)\n\nconst trashcan = findIconDefinition({ prefix: 'fas', iconName: 'trash' })\n\nconst ExistingTasks = () => {\n    // TODO:\n    // view all existing tasks\n    // deleteTask\n    // editTask\n        // title, collaborators\n    // completeTask \n    \n    console.log(library)\n    console.log(fas)\n\n    const [existingTasks, setExistingTasks] = useState(null);\n    const [loading, setLoading] = useState(null);\n    const [error, setError] = useState(false);\n\n    useEffect( () => {\n        fetchData();\n    }, [])\n\n    const url = \"http://localhost:2000/allTasksForUser/1\";\n\n    async function fetchData() {\n        setLoading(true);\n        let req = await fetch(url);\n        if (req.status < 400) {\n            let jsonData = await req.json();\n            setExistingTasks(jsonData);\n            console.log(existingTasks); \n            console.log(jsonData); \n        } else {\n            setError(true);\n        }\n        setLoading(false);\n    }\n\n    if (loading) {\n        return 'xyz';\n    }\n\n    if (existingTasks && existingTasks.length > 0) {\n        return (\n            <div className='existing-tasks'>\n                {existingTasks.map((task) => {\n                    return (\n                        <div className='task-parent'>\n                            <div className='task-title task-child'>\n                                { task.title }\n                            </div>\n                            <div className='delete-btn task-child'>\n                                <i className=\"fas fa-trash\"></i>\n                                delete\n                            </div>\n                        </div>        \n                    );\n                })}\n            </div>\n        );\n    }\n\n    return null;\n\n}\n\nexport default ExistingTasks;\n"]},"metadata":{},"sourceType":"module"}