{"ast":null,"code":"var _jsxFileName = \"/Users/katherinegraf/code/todo/react-app/src/TaskCreate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskCreate = () => {\n  _s();\n\n  const [newTask, setNewTask] = useState(null);\n  const newTaskUrl = \"//localhost:2000/addTask/\";\n\n  async function newTaskHandler(event) {\n    // if (event.charCode === 13 || event.key === \"Enter\") {\n    let task = event.target.value;\n    setNewTask(task);\n    let req = await fetch(url, {\n      method: 'POST'\n    });\n\n    if (req.status < 400) {\n      console.log('successfully added');\n    } else {\n      console.log('failed to add');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-create ba b--light-gray\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"newtask\",\n        children: \"Add a task:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: event => newTaskHandler(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TaskCreate, \"UdeZFzVewSMAArgH0PVpSmuibSA=\");\n\n_c = TaskCreate;\nexport default TaskCreate;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskCreate\");","map":{"version":3,"sources":["/Users/katherinegraf/code/todo/react-app/src/TaskCreate.js"],"names":["React","useState","TaskCreate","newTask","setNewTask","newTaskUrl","newTaskHandler","event","task","target","value","req","fetch","url","method","status","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAErB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,IAAD,CAAtC;AAEA,QAAMI,UAAU,GAAG,2BAAnB;;AAEA,iBAAeC,cAAf,CAA+BC,KAA/B,EAAsC;AAClC;AACI,QAAIC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAxB;AACAN,IAAAA,UAAU,CAACI,IAAD,CAAV;AACA,QAAIG,GAAG,GAAG,MAAMC,KAAK,CAACC,GAAD,EAAM;AACvBC,MAAAA,MAAM,EAAE;AADe,KAAN,CAArB;;AAGA,QAAIH,GAAG,CAACI,MAAJ,GAAa,GAAjB,EAAsB;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACH,KAFD,MAEO;AACHD,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH;AACR;;AAEC,sBACE;AAAK,IAAA,SAAS,EAAC,8BAAf;AAAA,2BACI;AAAA,8BAGI;AAAO,QAAA,GAAG,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,QAAQ,EAAIV,KAAD,IAAWD,cAAc,CAACC,KAAD;AAFxC;AAAA;AAAA;AAAA;AAAA,cAJJ,eAQI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAeH,CAnCH;;GAAML,U;;KAAAA,U;AAqCN,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst TaskCreate = () => {\n\n    const [newTask, setNewTask] = useState(null);\n\n    const newTaskUrl = \"//localhost:2000/addTask/\"\n\n    async function newTaskHandler (event) {\n        // if (event.charCode === 13 || event.key === \"Enter\") {\n            let task = event.target.value;\n            setNewTask(task);\n            let req = await fetch(url, {\n                method: 'POST',\n            });\n            if (req.status < 400) {\n                console.log('successfully added')\n            } else {\n                console.log('failed to add');\n            }\n    }\n  \n      return (\n        <div className='task-create ba b--light-gray'>\n            <form\n                // TODO onSubmit={ new method for backend request }\n            >\n                <label for='newtask'>Add a task:</label>\n                <input \n                    type='text'\n                    onChange= {(event) => newTaskHandler(event)}\n                />\n                <button type=\"submit\">Submit</button>\n            </form>\n        </div>\n      );\n\n  }\n  \nexport default TaskCreate;\n"]},"metadata":{},"sourceType":"module"}